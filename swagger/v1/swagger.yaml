---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/login":
    post:
      summary: User login
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/200"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/400_message"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
  "/api/v1/logout":
    post:
      summary: User logout
      security:
      - api_key: []
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized
  "/api/v1/books":
    get:
      summary: List categorized books
      description: Bookstore search by category paginated result
      parameters:
      - name: category
        in: query
        required: false
        description: Category name
        schema:
          type: string
      - name: page
        in: query
        description: Page
        require: false
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/books"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/401"
    post:
      summary: Add new book to the bookstore
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/200"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/401"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/400"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                author:
                  type: string
                title:
                  type: string
                short_description:
                  type: string
                category_id:
                  type: integer
                cover_image_url:
                  type: file
              required:
              - category_id
  "/api/v1/books/{id}":
    parameters:
    - name: id
      in: path
      description: Book ID
      required: true
      schema:
        type: string
    get:
      summary: Show book details
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/book"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/401"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/404"
    put:
      summary: Update book
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/200"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/400"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/401"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/404"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                author:
                  type: string
                title:
                  type: string
                short_description:
                  type: string
                category_id:
                  type: integer
    delete:
      summary: Delete book
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/200"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/401"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/404"
  "/api/v1/registration":
    post:
      summary: User registration
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/200"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/400"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
              - first_name
              - last_name
              - email
              - password
  "/api/v1/books/search":
    get:
      summary: Bookstore search
      description: Bookstore search paginated result
      parameters:
      - name: qk
        in: query
        description: Query key
        schema:
          type: string
      - name: q
        in: query
        description: Search query
        schema:
          type: string
      - name: page
        in: query
        description: Page
        require: false
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/books"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/400"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/401"
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
components:
  securitySchemes:
    bookstore_session:
      description: Session cookie
      in: cookie
      name: _bookstore_session
      type: apiKey
  schemas:
    books:
      type: array
      items:
        properties:
          id:
            type: integer
          title:
            type: string
          author:
            type: string
          short_description:
            type: string
          cover_image_url:
            type: string
          category:
            type: object
            properties:
              name:
                type: string
              parent:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
              parents:
                type: array
                items:
                  type: string
      example:
      - id: 1
        title: The Way of All Flesh
        author: Ja Schuppe
        short_description: Voluptas cum veniam. Error beatae aspernatur. Neque totam
          alias. Vo.
        cover_image_url:
        category:
          name: Romance
          parent:
            id: 1
            name: Fiction
          parents: Fiction
      - id: 2
        title: The Road Less Traveled
        author: Brian Swaniawski
        short_description: Sapiente illo temporibus. Doloribus accusamus praesentium.
          Debitis .
        cover_image_url: "/8023697d3b5db16f6242973d760c36ef.jpeg"
        category:
          name: Paranormal
          parent:
            id: 7
            name: Thriller and Suspense
          parents:
          - Thriller and Suspense
          - Fiction
    book:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        author:
          type: string
        short_description:
          type: string
        cover_image_url:
          type: string
        category:
          type: object
          properties:
            name:
              type: string
            parent:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
            parents:
              type: array
              items:
                type: string
      example:
        id: 2
        title: The Road Less Traveled
        author: Brian Swaniawski
        short_description: Sapiente illo temporibus. Doloribus accusamus praesentium.
          Debitis .
        cover_image_url: "/8023697d3b5db16f6242973d760c36ef.jpeg"
        category:
          name: Paranormal
          parent:
            id: 7
            name: Thriller and Suspense
          parents:
          - Thriller and Suspense
          - Fiction
    '200':
      type: object
      properties:
        message:
          type: string
      example:
        message: Success message.
    '401':
      type: object
      properties:
        message:
          type: string
      example:
        message: User is not authorized.
    '404':
      type: object
      properties:
        message:
          type: string
      example:
        message: Record not found.
    '400_message':
      type: object
      properties:
        message:
          type: string
      example:
        message: Failure message.
    '400':
      type: object
      properties:
        errors:
          type: object
      example:
        errors:
          invalid_attribute:
          - constraint error
